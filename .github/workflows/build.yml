# This is a basic workflow to help you get started with Actions
name: Build
# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggers the workflow on release creation
  release:
    types: [created]

env:
  IS_OUTPUT_EXPORT: true
  RELEASE_NAME: ${{ github.event.release.name }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  echo:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
      # - name: Install and Build ðŸ”§ # This example project is built using npm and outputs the result to the 'dist' folder
      #   run: |
      #     npm install
      #     npm run build
      #     touch out/.nojekyll
      # - name: Deploy ðŸš€
      #   uses: JamesIves/github-pages-deploy-action@v4
      #   with:
      #     branch: gh-pages # The branch the action should deploy to.
      #     folder: out # The folder the action should deploy.
      - name: Echo tag name
        run: |
          echo "Release name: ${{ github.event.release.name }}"
          echo "Release tag: ${{ github.event.release.tag_name }}"
          echo "Release target commitish: ${{ github.event.release.target_commitish }}"
          echo "Release draft: ${{ github.event.release.draft }}"
          echo "Release prerelease: ${{ github.event.release.prerelease }}"
          echo "Release created at: ${{ github.event.release.created_at }}"
          echo "Release published at: ${{ github.event.release.published_at }}"
          echo "Release url: ${{ github.event.release.url }}"
          echo "Release html_url: ${{ github.event.release.html_url }}"
          echo "Release assets_url: ${{ github.event.release.assets_url }}"
          echo "Release upload_url: ${{ github.event.release.upload_url }}"
          echo "Release tarball_url: ${{ github.event.release.tarball_url }}"
          echo "Release zipball_url: ${{ github.event.release.zipball_url }}"
          echo "Release body: ${{ github.event.release.body }}" 
